// src/screens/LoginScreen.js
import React, { useState } from "react";
import { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from "react-native";

// ðŸ”´ IMPORTANT: Change this IP if you are testing on a REAL PHONE
const API_BASE_URL = "http://192.168.1.9"; 

const LoginScreen = ({ onLogin }) => {
Â  const [role, setRole] = useState(null);
Â  const [email, setEmail] = useState("");
Â  const [password, setPassword] = useState("");

Â  const handleLogin = async () => {
Â  Â  if (!role) {
Â  Â  Â  Alert.alert("Select Role", "Please choose Patient, Doctor or Pharmacist");
Â  Â  Â  return;
Â  Â  }

Â  Â  if (!email || !password) {
Â  Â  Â  Alert.alert("Error", "Enter email and password");
Â  Â  Â  return;
Â  Â  }

    const loginUrl = `${API_BASE_URL}/api/${role}s/login`;

Â  Â  try {
Â  Â  Â  const res = await fetch(loginUrl, {
Â  Â  Â  Â  method: "POST",
Â  Â  Â  Â  headers: { "Content-Type": "application/json" },
Â  Â  Â  Â  body: JSON.stringify({ email, password }),
Â  Â  Â  });

Â  Â  Â  const data = await res.json();

Â  Â  Â  if (res.ok) {
Â  Â  Â  Â  const token = data.token;
Â  Â  Â  Â  Alert.alert("Success", `${role} logged in!`);
Â  Â  Â  Â  onLogin(token, role);
Â  Â  Â  } else {
Â  Â  Â  Â  Alert.alert("Login Error", data.message || "Login failed");
Â  Â  Â  }
Â  Â  } catch (err) {
Â  Â  Â  console.error("Network request failed:", err);
Â  Â  Â  Alert.alert("Connection Error", "Server not reachable. Please check your network and IP address settings.");
Â  Â  }
Â  };

Â  return (
Â  Â  <View style={styles.container}>
Â  Â  Â  <Text style={styles.title}>Login</Text>

Â  Â  Â  {/* Role Selection */}
Â  Â  Â  <View style={styles.roleContainer}>
Â  Â  Â  Â  <TouchableOpacity
Â  Â  Â  Â  Â  onPress={() => setRole("patient")}
Â  Â  Â  Â  Â  style={[styles.roleButton, role === "patient" && styles.activeRole]}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <Text style={[styles.roleButtonText, role === "patient" && styles.activeRoleText]}>Patient</Text>
Â  Â  Â  Â  </TouchableOpacity>
Â  Â  Â  Â  <TouchableOpacity
Â  Â  Â  Â  Â  onPress={() => setRole("doctor")}
Â  Â  Â  Â  Â  style={[styles.roleButton, role === "doctor" && styles.activeRole]}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <Text style={[styles.roleButtonText, role === "doctor" && styles.activeRoleText]}>Doctor</Text>
Â  Â  Â  Â  </TouchableOpacity>
Â  Â  Â  Â  <TouchableOpacity
Â  Â  Â  Â  Â  onPress={() => setRole("pharmacist")}
Â  Â  Â  Â  Â  style={[styles.roleButton, role === "pharmacist" && styles.activeRole]}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <Text style={[styles.roleButtonText, role === "pharmacist" && styles.activeRoleText]}>Pharmacist</Text>
Â  Â  Â  Â  </TouchableOpacity>
Â  Â  Â  </View>

Â  Â  Â  {/* Inputs */}
Â  Â  Â  <TextInput
Â  Â  Â  Â  style={styles.input}
Â  Â  Â  Â  placeholder="Email"
Â  Â  Â  Â  value={email}
Â  Â  Â  Â  onChangeText={setEmail}
Â  Â  Â  Â  autoCapitalize="none"
Â  Â  Â  Â  keyboardType="email-address"
Â  Â  Â  />
Â  Â  Â  <TextInput
Â  Â  Â  Â  style={styles.input}
Â  Â  Â  Â  placeholder="Password"
Â  Â  Â  Â  secureTextEntry
Â  Â  Â  Â  value={password}
Â  Â  Â  Â  onChangeText={setPassword}
Â  Â  Â  />

Â  Â  Â  {/* Login Button */}
Â  Â  Â  <TouchableOpacity onPress={handleLogin} style={styles.button}>
Â  Â  Â  Â  <Text style={styles.buttonText}>Login</Text>
Â  Â  Â  </TouchableOpacity>
Â  Â  </View>
Â  );
};

const styles = StyleSheet.create({
Â  container: { flex: 1, justifyContent: "center", alignItems: "center", backgroundColor: "#eef2ff", padding: 20 },
Â  title: { fontSize: 22, fontWeight: "bold", marginBottom: 20 },
Â  roleContainer: { flexDirection: "row", marginBottom: 20, justifyContent: 'center' },
Â  roleButton: { paddingVertical: 10, paddingHorizontal: 15, marginHorizontal: 5, backgroundColor: "#e0e7ff", borderRadius: 8, borderWidth: 1, borderColor: '#c7d2fe' },
Â  activeRole: { backgroundColor: "#4f46e5" },
  roleButtonText: { color: '#4338ca', fontWeight: '500' },
  activeRoleText: { color: '#ffffff', fontWeight: '700' },
Â  input: { width: "90%", padding: 12, marginVertical: 8, borderWidth: 1, borderColor: '#ccc', borderRadius: 8, backgroundColor: "#fff" },
Â  button: { backgroundColor: "#4f46e5", paddingVertical: 14, borderRadius: 8, marginTop: 20, width: '90%', alignItems: 'center' },
Â  buttonText: { color: "#fff", fontWeight: "bold", fontSize: 16 },
});

export default LoginScreen;